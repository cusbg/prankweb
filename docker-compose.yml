services:
  gateway:
    build:
      context: ./
      dockerfile: ./gateway/Dockerfile
      args:
        GOOGLE_ANALYTICS: ""
        WEB_SERVICE_USER: ${WEB_SERVICE_USER:-user}
        WEB_SERVICE_PASSWORD: ${WEB_SERVICE_PASSWORD:-1234}
    depends_on:
      - web-server
    ports:
      - "8020:80"
  rabbitmq:
    build:
      context: ./
      dockerfile: ./rabbitmq/Dockerfile
    hostname: "rabbitmq"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-1234}
    volumes:
      - rabbitmq:/var/lib/rabbitmq/
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 30s
      timeout: 30s
      retries: 3
  flower:
    image: mher/flower
    command: "celery flower --url_prefix=service/flower"
    environment:
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER:-user}:${RABBITMQ_DEFAULT_PASS:-1234}@rabbitmq:5672"
    depends_on:
      rabbitmq:
        condition: service_healthy
  web-server:
    build:
      context: ./
      dockerfile: ./web-server/Dockerfile
      args:
        UID: ${UID:-5988}
        GID: ${GID:-5988}
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER:-user}:${RABBITMQ_DEFAULT_PASS:-1234}@rabbitmq:5672"
      PRANKWEB_DATA_PREDICTIONS: "/data/prankweb/predictions/"
      PRANKWEB_DATA_DOCKING: "/data/prankweb/docking/"
      PRANKWEB_DATA_TUNNELS: "/data/prankweb/tunnels/"
    volumes:
      - predictions:/data/prankweb/predictions
      - docking:/data/prankweb/docking
      - tunnels:/data/prankweb/tunnels
  executor-p2rank:
    build:
      context: ./
      dockerfile: ./executor-p2rank/Dockerfile
      args:
        UID: ${UID:-5988}
        GID: ${GID:-5988}
    command: ["celery", "--app=celery_p2rank", "worker", "--queues=p2rank", "--concurrency=4", "--hostname=executor-p2rank"]
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER:-user}:${RABBITMQ_DEFAULT_PASS:-1234}@rabbitmq:5672"
      LOCK_DIRECTORY: "/data/prankweb/predictions/lock"
    volumes:
      - conservation:/data/conservation
      - predictions:/data/prankweb/predictions
      - docking:/data/prankweb/docking
      - tunnels:/data/prankweb/tunnels
  executor-docking:
    build:
      context: ./
      dockerfile: ./executor-docking/Dockerfile
      args:
        UID: ${UID:-5988}
        GID: ${GID:-5988}
    command: ["celery", "--app=celery_docking", "worker", "--queues=docking", "--concurrency=4", "--hostname=executor-docking"]
    environment:
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER:-user}:${RABBITMQ_DEFAULT_PASS:-1234}@rabbitmq:5672"
    restart: unless-stopped
    volumes:
      - docking:/data/prankweb/docking
      - predictions:/data/prankweb/predictions
    depends_on:
      rabbitmq:
        condition: service_healthy
  executor-tunnels:
    build:
      context: ./
      dockerfile: ./executor-tunnels/Dockerfile
      args:
        UID: ${UID:-5988}
        GID: ${GID:-5988}
    command: ["celery", "--app=celery_tunnels", "worker", "--queues=tunnels", "--concurrency=4", "--hostname=executor-tunnels"]
    environment:
      CELERY_BROKER_URL: "amqp://${RABBITMQ_DEFAULT_USER:-user}:${RABBITMQ_DEFAULT_PASS:-1234}@rabbitmq:5672"
    restart: unless-stopped
    volumes:
      - tunnels:/data/prankweb/tunnels
      - predictions:/data/prankweb/predictions
    depends_on:
      rabbitmq:
        condition: service_healthy
  prometheus:
    build:
      context: ./
      dockerfile: ./prometheus/Dockerfile
    volumes:
      - services:/data
    depends_on:
      - flower
      - rabbitmq
    restart: unless-stopped
    ports:
      - "9090:9090"
volumes:
  rabbitmq:
    external: True
    name: prankweb_rabbitmq
  conservation:
    external: True
    name: prankweb_conservation
  predictions:
    external: True
    name: prankweb_predictions
  services:
    external: True
    name: prankweb_services
  docking:
    external: True
    name: prankweb_docking
  tunnels:
    external: True
    name: prankweb_tunnels
